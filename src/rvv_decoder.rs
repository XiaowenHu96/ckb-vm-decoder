use super::{
    vi_builder, vsetivli_builder, vsetvl_builder, vsetvli_builder, vv_builder, vx_builder,
};
use ckb_vm::instructions::insts as insts;
use ckb_vm::instructions::{set_instruction_length_4, Instruction, Register};

pub type OpcodeBuilder = fn(instruction_bits: u32, insts::InstructionOpcode) -> Instruction;

pub struct VInstruction {
    mask: u32,
    pub match_bits: u32,
    opcode: insts::InstructionOpcode,
    builder: OpcodeBuilder,
}

impl VInstruction {
    pub const fn new(
        mask: u32,
        match_bits: u32,
        opcode: insts::InstructionOpcode,
        builder: OpcodeBuilder,
    ) -> Self {
        VInstruction {
            mask,
            match_bits,
            opcode,
            builder,
        }
    }
}

// --- ------------------------------------------- ---
// --- Following code is generated by perfect_hash ---
// --- ------------------------------------------- ---
const G_RVV : [u32;489] = [0, 0, 0, 0, 0, 251, 0, 0, 0, 0, 0, 0, 0, 0, 300, 0, 0, 176, 0, 0, 0, 0, 0, 317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 454, 117, 0, 299, 372, 221, 0, 0, 0, 0, 229, 440, 0, 0, 353, 85, 359, 407, 143, 482, 366, 0, 390, 216, 0, 0, 382, 0, 0, 471, 0, 115, 0, 0, 0, 120, 56, 314, 0, 0, 0, 125, 0, 329, 0, 0, 0, 5, 86, 0, 95, 143, 419, 205, 46, 63, 238, 404, 185, 396, 410, 233, 466, 0, 0, 387, 277, 24, 36, 0, 72, 308, 4, 0, 287, 103, 0, 217, 0, 0, 0, 0, 16, 0, 0, 407, 106, 0, 0, 59, 0, 0, 92, 468, 400, 0, 0, 0, 150, 0, 226, 15, 225, 0, 0, 399, 0, 0, 155, 54, 0, 236, 136, 168, 0, 0, 274, 54, 49, 0, 153, 202, 198, 0, 311, 110, 0, 0, 0, 192, 238, 0, 219, 147, 0, 0, 231, 367, 105, 0, 214, 207, 186, 485, 361, 0, 0, 264, 466, 117, 0, 289, 133, 0, 0, 0, 30, 222, 0, 221, 248, 0, 0, 0, 442, 452, 106, 0, 58, 0, 0, 290, 227, 259, 223, 100, 308, 0, 0, 24, 216, 0, 0, 160, 159, 0, 26, 101, 0, 48, 89, 208, 0, 0, 0, 215, 0, 0, 159, 183, 204, 31, 0, 0, 0, 0, 277, 89, 0, 43, 14, 0, 269, 0, 0, 21, 458, 0, 450, 468, 0, 94, 253, 0, 0, 42, 50, 196, 434, 186, 234, 0, 269, 0, 330, 0, 142, 281, 0, 320, 0, 400, 65, 46, 0, 84, 196, 208, 0, 0, 165, 457, 0, 462, 0, 0, 303, 378, 0, 0, 127, 323, 62, 59, 0, 0, 149, 0, 418, 98, 216, 0, 127, 96, 17, 245, 439, 99, 0, 79, 90, 292, 261, 76, 56, 248, 0, 0, 123, 101, 52, 66, 452, 482, 392, 0, 444, 120, 297, 28, 259, 450, 72, 291, 145, 59, 10, 318, 250, 198, 0, 87, 111, 132, 0, 31, 199, 108, 0, 0, 183, 0, 301, 13, 56, 222, 0, 31, 98, 110, 0, 0, 233, 265, 0, 329, 0, 0, 22, 292, 243, 0, 466, 139, 254, 23, 0, 0, 166, 0, 258, 348, 190, 0, 1, 57, 48, 294, 65, 292, 408, 173, 0, 231, 8, 477, 165, 379, 0, 0, 285, 410, 325, 184, 351, 339, 405, 48, 134, 20, 455, 0, 76, 90, 66, 113, 0, 174, 395, 298, 0, 458, 43, 0, 395, 195, 187, 0, 150, 33, 411, 0, 454, 71, 0, 0, 82, 96, 65, 0, 420, 136, 204, 0, 288, 326, 432, 174, 179, 0, 338, 255, 98, 0, 281, 241, 283, 483, 0, 0, 436, 0, 236, 306, 0, 0, 141, 140, 355, 0, 420, 406, 185, 172, 34, 67, 103, 0, 200, 373, 199];

#[inline(always)]
fn hash_f_rvv_1(key: u32) -> usize {
    return ((key & 0xff) * 431 + (key >> 8 & 0xff) * 216 + (key >> 16 & 0xff) * 443 + (key >> 24) * 377) as usize;
}
    
#[inline(always)]
fn hash_f_rvv_2(key: u32) -> usize {
    return ((key & 0xff) * 162 + (key >> 8 & 0xff) * 355 + (key >> 16 & 0xff) * 185 + (key >> 24) * 400) as usize;
}
    
#[inline(always)]
fn find_rvv(key:u32) -> usize {
    return ((G_RVV[hash_f_rvv_1(key) % 489] 
        + G_RVV[hash_f_rvv_2(key) % 489]) % 489) as usize;
}

pub fn factory<R: Register>(instruction_bits: u32, _: u32) -> Option<Instruction> {
    for mask in &MASKS {
        let match_bits = instruction_bits & mask;
        let idx = find_rvv(match_bits);
        if  idx < 302 && (INSTRUCTION_LIST[idx].mask & instruction_bits) == INSTRUCTION_LIST[idx].match_bits {
            return Some(set_instruction_length_4(
            (INSTRUCTION_LIST[idx].builder)(instruction_bits,INSTRUCTION_LIST[idx].opcode)))
        }
    }
    return None
}
const INST_VAADD_VV : VInstruction = VInstruction::new(0xfc00707f,0x24002057,insts::OP_VAADD_VV,vv_builder);
const INST_VAADD_VX : VInstruction = VInstruction::new(0xfc00707f,0x24006057,insts::OP_VAADD_VX,vx_builder);
const INST_VAADDU_VV : VInstruction = VInstruction::new(0xfc00707f,0x20002057,insts::OP_VAADDU_VV,vv_builder);
const INST_VAADDU_VX : VInstruction = VInstruction::new(0xfc00707f,0x20006057,insts::OP_VAADDU_VX,vx_builder);
const INST_VADC_VIM : VInstruction = VInstruction::new(0xfe00707f,0x40003057,insts::OP_VADC_VIM,vi_builder);
const INST_VADC_VVM : VInstruction = VInstruction::new(0xfe00707f,0x40000057,insts::OP_VADC_VVM,vv_builder);
const INST_VADC_VXM : VInstruction = VInstruction::new(0xfe00707f,0x40004057,insts::OP_VADC_VXM,vx_builder);
const INST_VADD_VI : VInstruction = VInstruction::new(0xfc00707f,0x3057,insts::OP_VADD_VI,vi_builder);
const INST_VADD_VV : VInstruction = VInstruction::new(0xfc00707f,0x57,insts::OP_VADD_VV,vv_builder);
const INST_VADD_VX : VInstruction = VInstruction::new(0xfc00707f,0x4057,insts::OP_VADD_VX,vx_builder);
const INST_VAND_VI : VInstruction = VInstruction::new(0xfc00707f,0x24003057,insts::OP_VAND_VI,vi_builder);
const INST_VAND_VV : VInstruction = VInstruction::new(0xfc00707f,0x24000057,insts::OP_VAND_VV,vv_builder);
const INST_VAND_VX : VInstruction = VInstruction::new(0xfc00707f,0x24004057,insts::OP_VAND_VX,vx_builder);
const INST_VASUB_VV : VInstruction = VInstruction::new(0xfc00707f,0x2c002057,insts::OP_VASUB_VV,vv_builder);
const INST_VASUB_VX : VInstruction = VInstruction::new(0xfc00707f,0x2c006057,insts::OP_VASUB_VX,vx_builder);
const INST_VASUBU_VV : VInstruction = VInstruction::new(0xfc00707f,0x28002057,insts::OP_VASUBU_VV,vv_builder);
const INST_VASUBU_VX : VInstruction = VInstruction::new(0xfc00707f,0x28006057,insts::OP_VASUBU_VX,vx_builder);
const INST_VCOMPRESS_VM : VInstruction = VInstruction::new(0xfe00707f,0x5e002057,insts::OP_VCOMPRESS_VM,vv_builder);
const INST_VCPOP_M : VInstruction = VInstruction::new(0xfc0ff07f,0x40082057,insts::OP_VCPOP_M,vv_builder);
const INST_VDIV_VV : VInstruction = VInstruction::new(0xfc00707f,0x84002057,insts::OP_VDIV_VV,vv_builder);
const INST_VDIV_VX : VInstruction = VInstruction::new(0xfc00707f,0x84006057,insts::OP_VDIV_VX,vx_builder);
const INST_VDIVU_VV : VInstruction = VInstruction::new(0xfc00707f,0x80002057,insts::OP_VDIVU_VV,vv_builder);
const INST_VDIVU_VX : VInstruction = VInstruction::new(0xfc00707f,0x80006057,insts::OP_VDIVU_VX,vx_builder);
const INST_VFIRST_M : VInstruction = VInstruction::new(0xfc0ff07f,0x4008a057,insts::OP_VFIRST_M,vv_builder);
const INST_VID_V : VInstruction = VInstruction::new(0xfdfff07f,0x5008a057,insts::OP_VID_V,vv_builder);
const INST_VIOTA_M : VInstruction = VInstruction::new(0xfc0ff07f,0x50082057,insts::OP_VIOTA_M,vv_builder);
const INST_VL1RE16_V : VInstruction = VInstruction::new(0xfff0707f,0x2805007,insts::OP_VL1RE16_V,vx_builder);
const INST_VL1RE32_V : VInstruction = VInstruction::new(0xfff0707f,0x2806007,insts::OP_VL1RE32_V,vx_builder);
const INST_VL1RE64_V : VInstruction = VInstruction::new(0xfff0707f,0x2807007,insts::OP_VL1RE64_V,vx_builder);
const INST_VL1RE8_V : VInstruction = VInstruction::new(0xfff0707f,0x2800007,insts::OP_VL1RE8_V,vx_builder);
const INST_VL2RE16_V : VInstruction = VInstruction::new(0xfff0707f,0x22805007,insts::OP_VL2RE16_V,vx_builder);
const INST_VL2RE32_V : VInstruction = VInstruction::new(0xfff0707f,0x22806007,insts::OP_VL2RE32_V,vx_builder);
const INST_VL2RE64_V : VInstruction = VInstruction::new(0xfff0707f,0x22807007,insts::OP_VL2RE64_V,vx_builder);
const INST_VL2RE8_V : VInstruction = VInstruction::new(0xfff0707f,0x22800007,insts::OP_VL2RE8_V,vx_builder);
const INST_VL4RE16_V : VInstruction = VInstruction::new(0xfff0707f,0x62805007,insts::OP_VL4RE16_V,vx_builder);
const INST_VL4RE32_V : VInstruction = VInstruction::new(0xfff0707f,0x62806007,insts::OP_VL4RE32_V,vx_builder);
const INST_VL4RE64_V : VInstruction = VInstruction::new(0xfff0707f,0x62807007,insts::OP_VL4RE64_V,vx_builder);
const INST_VL4RE8_V : VInstruction = VInstruction::new(0xfff0707f,0x62800007,insts::OP_VL4RE8_V,vx_builder);
const INST_VL8RE16_V : VInstruction = VInstruction::new(0xfff0707f,0xe2805007,insts::OP_VL8RE16_V,vx_builder);
const INST_VL8RE32_V : VInstruction = VInstruction::new(0xfff0707f,0xe2806007,insts::OP_VL8RE32_V,vx_builder);
const INST_VL8RE64_V : VInstruction = VInstruction::new(0xfff0707f,0xe2807007,insts::OP_VL8RE64_V,vx_builder);
const INST_VL8RE8_V : VInstruction = VInstruction::new(0xfff0707f,0xe2800007,insts::OP_VL8RE8_V,vx_builder);
const INST_VLE1024_V : VInstruction = VInstruction::new(0x1df0707f,0x10007007,insts::OP_VLE1024_V,vx_builder);
const INST_VLE128_V : VInstruction = VInstruction::new(0x1df0707f,0x10000007,insts::OP_VLE128_V,vx_builder);
const INST_VLE16_V : VInstruction = VInstruction::new(0x1df0707f,0x5007,insts::OP_VLE16_V,vx_builder);
const INST_VLE256_V : VInstruction = VInstruction::new(0x1df0707f,0x10005007,insts::OP_VLE256_V,vx_builder);
const INST_VLE32_V : VInstruction = VInstruction::new(0x1df0707f,0x6007,insts::OP_VLE32_V,vx_builder);
const INST_VLE512_V : VInstruction = VInstruction::new(0x1df0707f,0x10006007,insts::OP_VLE512_V,vx_builder);
const INST_VLE64_V : VInstruction = VInstruction::new(0x1df0707f,0x7007,insts::OP_VLE64_V,vx_builder);
const INST_VLE8_V : VInstruction = VInstruction::new(0x1df0707f,0x7,insts::OP_VLE8_V,vx_builder);
const INST_VLM_V : VInstruction = VInstruction::new(0xfff0707f,0x2b00007,insts::OP_VLM_V,vx_builder);
const INST_VLOXEI1024_V : VInstruction = VInstruction::new(0x1c00707f,0x1c007007,insts::OP_VLOXEI1024_V,vx_builder);
const INST_VLOXEI128_V : VInstruction = VInstruction::new(0x1c00707f,0x1c000007,insts::OP_VLOXEI128_V,vx_builder);
const INST_VLOXEI16_V : VInstruction = VInstruction::new(0x1c00707f,0xc005007,insts::OP_VLOXEI16_V,vx_builder);
const INST_VLOXEI256_V : VInstruction = VInstruction::new(0x1c00707f,0x1c005007,insts::OP_VLOXEI256_V,vx_builder);
const INST_VLOXEI32_V : VInstruction = VInstruction::new(0x1c00707f,0xc006007,insts::OP_VLOXEI32_V,vx_builder);
const INST_VLOXEI512_V : VInstruction = VInstruction::new(0x1c00707f,0x1c006007,insts::OP_VLOXEI512_V,vx_builder);
const INST_VLOXEI64_V : VInstruction = VInstruction::new(0x1c00707f,0xc007007,insts::OP_VLOXEI64_V,vx_builder);
const INST_VLOXEI8_V : VInstruction = VInstruction::new(0x1c00707f,0xc000007,insts::OP_VLOXEI8_V,vx_builder);
const INST_VLSE1024_V : VInstruction = VInstruction::new(0x1c00707f,0x18007007,insts::OP_VLSE1024_V,vx_builder);
const INST_VLSE128_V : VInstruction = VInstruction::new(0x1c00707f,0x18000007,insts::OP_VLSE128_V,vx_builder);
const INST_VLSE16_V : VInstruction = VInstruction::new(0x1c00707f,0x8005007,insts::OP_VLSE16_V,vx_builder);
const INST_VLSE256_V : VInstruction = VInstruction::new(0x1c00707f,0x18005007,insts::OP_VLSE256_V,vx_builder);
const INST_VLSE32_V : VInstruction = VInstruction::new(0x1c00707f,0x8006007,insts::OP_VLSE32_V,vx_builder);
const INST_VLSE512_V : VInstruction = VInstruction::new(0x1c00707f,0x18006007,insts::OP_VLSE512_V,vx_builder);
const INST_VLSE64_V : VInstruction = VInstruction::new(0x1c00707f,0x8007007,insts::OP_VLSE64_V,vx_builder);
const INST_VLSE8_V : VInstruction = VInstruction::new(0x1c00707f,0x8000007,insts::OP_VLSE8_V,vx_builder);
const INST_VLUXEI1024_V : VInstruction = VInstruction::new(0x1c00707f,0x14007007,insts::OP_VLUXEI1024_V,vx_builder);
const INST_VLUXEI128_V : VInstruction = VInstruction::new(0x1c00707f,0x14000007,insts::OP_VLUXEI128_V,vx_builder);
const INST_VLUXEI16_V : VInstruction = VInstruction::new(0x1c00707f,0x4005007,insts::OP_VLUXEI16_V,vx_builder);
const INST_VLUXEI256_V : VInstruction = VInstruction::new(0x1c00707f,0x14005007,insts::OP_VLUXEI256_V,vx_builder);
const INST_VLUXEI32_V : VInstruction = VInstruction::new(0x1c00707f,0x4006007,insts::OP_VLUXEI32_V,vx_builder);
const INST_VLUXEI512_V : VInstruction = VInstruction::new(0x1c00707f,0x14006007,insts::OP_VLUXEI512_V,vx_builder);
const INST_VLUXEI64_V : VInstruction = VInstruction::new(0x1c00707f,0x4007007,insts::OP_VLUXEI64_V,vx_builder);
const INST_VLUXEI8_V : VInstruction = VInstruction::new(0x1c00707f,0x4000007,insts::OP_VLUXEI8_V,vx_builder);
const INST_VMACC_VV : VInstruction = VInstruction::new(0xfc00707f,0xb4002057,insts::OP_VMACC_VV,vv_builder);
const INST_VMACC_VX : VInstruction = VInstruction::new(0xfc00707f,0xb4006057,insts::OP_VMACC_VX,vx_builder);
const INST_VMADC_VI : VInstruction = VInstruction::new(0xfe00707f,0x46003057,insts::OP_VMADC_VI,vi_builder);
const INST_VMADC_VIM : VInstruction = VInstruction::new(0xfe00707f,0x44003057,insts::OP_VMADC_VIM,vi_builder);
const INST_VMADC_VV : VInstruction = VInstruction::new(0xfe00707f,0x46000057,insts::OP_VMADC_VV,vv_builder);
const INST_VMADC_VVM : VInstruction = VInstruction::new(0xfe00707f,0x44000057,insts::OP_VMADC_VVM,vv_builder);
const INST_VMADC_VX : VInstruction = VInstruction::new(0xfe00707f,0x46004057,insts::OP_VMADC_VX,vx_builder);
const INST_VMADC_VXM : VInstruction = VInstruction::new(0xfe00707f,0x44004057,insts::OP_VMADC_VXM,vx_builder);
const INST_VMADD_VV : VInstruction = VInstruction::new(0xfc00707f,0xa4002057,insts::OP_VMADD_VV,vv_builder);
const INST_VMADD_VX : VInstruction = VInstruction::new(0xfc00707f,0xa4006057,insts::OP_VMADD_VX,vx_builder);
const INST_VMAND_MM : VInstruction = VInstruction::new(0xfc00707f,0x64002057,insts::OP_VMAND_MM,vv_builder);
const INST_VMANDNOT_MM : VInstruction = VInstruction::new(0xfc00707f,0x60002057,insts::OP_VMANDNOT_MM,vv_builder);
const INST_VMAX_VV : VInstruction = VInstruction::new(0xfc00707f,0x1c000057,insts::OP_VMAX_VV,vv_builder);
const INST_VMAX_VX : VInstruction = VInstruction::new(0xfc00707f,0x1c004057,insts::OP_VMAX_VX,vx_builder);
const INST_VMAXU_VV : VInstruction = VInstruction::new(0xfc00707f,0x18000057,insts::OP_VMAXU_VV,vv_builder);
const INST_VMAXU_VX : VInstruction = VInstruction::new(0xfc00707f,0x18004057,insts::OP_VMAXU_VX,vx_builder);
const INST_VMERGE_VIM : VInstruction = VInstruction::new(0xfe00707f,0x5c003057,insts::OP_VMERGE_VIM,vi_builder);
const INST_VMERGE_VVM : VInstruction = VInstruction::new(0xfe00707f,0x5c000057,insts::OP_VMERGE_VVM,vv_builder);
const INST_VMERGE_VXM : VInstruction = VInstruction::new(0xfe00707f,0x5c004057,insts::OP_VMERGE_VXM,vx_builder);
const INST_VMIN_VV : VInstruction = VInstruction::new(0xfc00707f,0x14000057,insts::OP_VMIN_VV,vv_builder);
const INST_VMIN_VX : VInstruction = VInstruction::new(0xfc00707f,0x14004057,insts::OP_VMIN_VX,vx_builder);
const INST_VMINU_VV : VInstruction = VInstruction::new(0xfc00707f,0x10000057,insts::OP_VMINU_VV,vv_builder);
const INST_VMINU_VX : VInstruction = VInstruction::new(0xfc00707f,0x10004057,insts::OP_VMINU_VX,vx_builder);
const INST_VMNAND_MM : VInstruction = VInstruction::new(0xfc00707f,0x74002057,insts::OP_VMNAND_MM,vv_builder);
const INST_VMNOR_MM : VInstruction = VInstruction::new(0xfc00707f,0x78002057,insts::OP_VMNOR_MM,vv_builder);
const INST_VMOR_MM : VInstruction = VInstruction::new(0xfc00707f,0x68002057,insts::OP_VMOR_MM,vv_builder);
const INST_VMORNOT_MM : VInstruction = VInstruction::new(0xfc00707f,0x70002057,insts::OP_VMORNOT_MM,vv_builder);
const INST_VMSBC_VV : VInstruction = VInstruction::new(0xfe00707f,0x4e000057,insts::OP_VMSBC_VV,vv_builder);
const INST_VMSBC_VVM : VInstruction = VInstruction::new(0xfe00707f,0x4c000057,insts::OP_VMSBC_VVM,vv_builder);
const INST_VMSBC_VX : VInstruction = VInstruction::new(0xfe00707f,0x4e004057,insts::OP_VMSBC_VX,vx_builder);
const INST_VMSBC_VXM : VInstruction = VInstruction::new(0xfe00707f,0x4c004057,insts::OP_VMSBC_VXM,vx_builder);
const INST_VMSBF_M : VInstruction = VInstruction::new(0xfc0ff07f,0x5000a057,insts::OP_VMSBF_M,vv_builder);
const INST_VMSEQ_VI : VInstruction = VInstruction::new(0xfc00707f,0x60003057,insts::OP_VMSEQ_VI,vi_builder);
const INST_VMSEQ_VV : VInstruction = VInstruction::new(0xfc00707f,0x60000057,insts::OP_VMSEQ_VV,vv_builder);
const INST_VMSEQ_VX : VInstruction = VInstruction::new(0xfc00707f,0x60004057,insts::OP_VMSEQ_VX,vx_builder);
const INST_VMSGT_VI : VInstruction = VInstruction::new(0xfc00707f,0x7c003057,insts::OP_VMSGT_VI,vi_builder);
const INST_VMSGT_VX : VInstruction = VInstruction::new(0xfc00707f,0x7c004057,insts::OP_VMSGT_VX,vx_builder);
const INST_VMSGTU_VI : VInstruction = VInstruction::new(0xfc00707f,0x78003057,insts::OP_VMSGTU_VI,vi_builder);
const INST_VMSGTU_VX : VInstruction = VInstruction::new(0xfc00707f,0x78004057,insts::OP_VMSGTU_VX,vx_builder);
const INST_VMSIF_M : VInstruction = VInstruction::new(0xfc0ff07f,0x5001a057,insts::OP_VMSIF_M,vv_builder);
const INST_VMSLE_VI : VInstruction = VInstruction::new(0xfc00707f,0x74003057,insts::OP_VMSLE_VI,vi_builder);
const INST_VMSLE_VV : VInstruction = VInstruction::new(0xfc00707f,0x74000057,insts::OP_VMSLE_VV,vv_builder);
const INST_VMSLE_VX : VInstruction = VInstruction::new(0xfc00707f,0x74004057,insts::OP_VMSLE_VX,vx_builder);
const INST_VMSLEU_VI : VInstruction = VInstruction::new(0xfc00707f,0x70003057,insts::OP_VMSLEU_VI,vi_builder);
const INST_VMSLEU_VV : VInstruction = VInstruction::new(0xfc00707f,0x70000057,insts::OP_VMSLEU_VV,vv_builder);
const INST_VMSLEU_VX : VInstruction = VInstruction::new(0xfc00707f,0x70004057,insts::OP_VMSLEU_VX,vx_builder);
const INST_VMSLT_VV : VInstruction = VInstruction::new(0xfc00707f,0x6c000057,insts::OP_VMSLT_VV,vv_builder);
const INST_VMSLT_VX : VInstruction = VInstruction::new(0xfc00707f,0x6c004057,insts::OP_VMSLT_VX,vx_builder);
const INST_VMSLTU_VV : VInstruction = VInstruction::new(0xfc00707f,0x68000057,insts::OP_VMSLTU_VV,vv_builder);
const INST_VMSLTU_VX : VInstruction = VInstruction::new(0xfc00707f,0x68004057,insts::OP_VMSLTU_VX,vx_builder);
const INST_VMSNE_VI : VInstruction = VInstruction::new(0xfc00707f,0x64003057,insts::OP_VMSNE_VI,vi_builder);
const INST_VMSNE_VV : VInstruction = VInstruction::new(0xfc00707f,0x64000057,insts::OP_VMSNE_VV,vv_builder);
const INST_VMSNE_VX : VInstruction = VInstruction::new(0xfc00707f,0x64004057,insts::OP_VMSNE_VX,vx_builder);
const INST_VMSOF_M : VInstruction = VInstruction::new(0xfc0ff07f,0x50012057,insts::OP_VMSOF_M,vv_builder);
const INST_VMUL_VV : VInstruction = VInstruction::new(0xfc00707f,0x94002057,insts::OP_VMUL_VV,vv_builder);
const INST_VMUL_VX : VInstruction = VInstruction::new(0xfc00707f,0x94006057,insts::OP_VMUL_VX,vx_builder);
const INST_VMULH_VV : VInstruction = VInstruction::new(0xfc00707f,0x9c002057,insts::OP_VMULH_VV,vv_builder);
const INST_VMULH_VX : VInstruction = VInstruction::new(0xfc00707f,0x9c006057,insts::OP_VMULH_VX,vx_builder);
const INST_VMULHSU_VV : VInstruction = VInstruction::new(0xfc00707f,0x98002057,insts::OP_VMULHSU_VV,vv_builder);
const INST_VMULHSU_VX : VInstruction = VInstruction::new(0xfc00707f,0x98006057,insts::OP_VMULHSU_VX,vx_builder);
const INST_VMULHU_VV : VInstruction = VInstruction::new(0xfc00707f,0x90002057,insts::OP_VMULHU_VV,vv_builder);
const INST_VMULHU_VX : VInstruction = VInstruction::new(0xfc00707f,0x90006057,insts::OP_VMULHU_VX,vx_builder);
const INST_VMV1R_V : VInstruction = VInstruction::new(0xfe0ff07f,0x9e003057,insts::OP_VMV1R_V,vi_builder);
const INST_VMV2R_V : VInstruction = VInstruction::new(0xfe0ff07f,0x9e00b057,insts::OP_VMV2R_V,vi_builder);
const INST_VMV4R_V : VInstruction = VInstruction::new(0xfe0ff07f,0x9e01b057,insts::OP_VMV4R_V,vi_builder);
const INST_VMV8R_V : VInstruction = VInstruction::new(0xfe0ff07f,0x9e03b057,insts::OP_VMV8R_V,vi_builder);
const INST_VMV_S_X : VInstruction = VInstruction::new(0xfff0707f,0x42006057,insts::OP_VMV_S_X,vx_builder);
const INST_VMV_V_I : VInstruction = VInstruction::new(0xfff0707f,0x5e003057,insts::OP_VMV_V_I,vi_builder);
const INST_VMV_V_V : VInstruction = VInstruction::new(0xfff0707f,0x5e000057,insts::OP_VMV_V_V,vv_builder);
const INST_VMV_V_X : VInstruction = VInstruction::new(0xfff0707f,0x5e004057,insts::OP_VMV_V_X,vx_builder);
const INST_VMV_X_S : VInstruction = VInstruction::new(0xfe0ff07f,0x42002057,insts::OP_VMV_X_S,vv_builder);
const INST_VMXNOR_MM : VInstruction = VInstruction::new(0xfc00707f,0x7c002057,insts::OP_VMXNOR_MM,vv_builder);
const INST_VMXOR_MM : VInstruction = VInstruction::new(0xfc00707f,0x6c002057,insts::OP_VMXOR_MM,vv_builder);
const INST_VNCLIP_WI : VInstruction = VInstruction::new(0xfc00707f,0xbc003057,insts::OP_VNCLIP_WI,vi_builder);
const INST_VNCLIP_WV : VInstruction = VInstruction::new(0xfc00707f,0xbc000057,insts::OP_VNCLIP_WV,vv_builder);
const INST_VNCLIP_WX : VInstruction = VInstruction::new(0xfc00707f,0xbc004057,insts::OP_VNCLIP_WX,vx_builder);
const INST_VNCLIPU_WI : VInstruction = VInstruction::new(0xfc00707f,0xb8003057,insts::OP_VNCLIPU_WI,vi_builder);
const INST_VNCLIPU_WV : VInstruction = VInstruction::new(0xfc00707f,0xb8000057,insts::OP_VNCLIPU_WV,vv_builder);
const INST_VNCLIPU_WX : VInstruction = VInstruction::new(0xfc00707f,0xb8004057,insts::OP_VNCLIPU_WX,vx_builder);
const INST_VNMSAC_VV : VInstruction = VInstruction::new(0xfc00707f,0xbc002057,insts::OP_VNMSAC_VV,vv_builder);
const INST_VNMSAC_VX : VInstruction = VInstruction::new(0xfc00707f,0xbc006057,insts::OP_VNMSAC_VX,vx_builder);
const INST_VNMSUB_VV : VInstruction = VInstruction::new(0xfc00707f,0xac002057,insts::OP_VNMSUB_VV,vv_builder);
const INST_VNMSUB_VX : VInstruction = VInstruction::new(0xfc00707f,0xac006057,insts::OP_VNMSUB_VX,vx_builder);
const INST_VNSRA_WI : VInstruction = VInstruction::new(0xfc00707f,0xb4003057,insts::OP_VNSRA_WI,vi_builder);
const INST_VNSRA_WV : VInstruction = VInstruction::new(0xfc00707f,0xb4000057,insts::OP_VNSRA_WV,vv_builder);
const INST_VNSRA_WX : VInstruction = VInstruction::new(0xfc00707f,0xb4004057,insts::OP_VNSRA_WX,vx_builder);
const INST_VNSRL_WI : VInstruction = VInstruction::new(0xfc00707f,0xb0003057,insts::OP_VNSRL_WI,vi_builder);
const INST_VNSRL_WV : VInstruction = VInstruction::new(0xfc00707f,0xb0000057,insts::OP_VNSRL_WV,vv_builder);
const INST_VNSRL_WX : VInstruction = VInstruction::new(0xfc00707f,0xb0004057,insts::OP_VNSRL_WX,vx_builder);
const INST_VOR_VI : VInstruction = VInstruction::new(0xfc00707f,0x28003057,insts::OP_VOR_VI,vi_builder);
const INST_VOR_VV : VInstruction = VInstruction::new(0xfc00707f,0x28000057,insts::OP_VOR_VV,vv_builder);
const INST_VOR_VX : VInstruction = VInstruction::new(0xfc00707f,0x28004057,insts::OP_VOR_VX,vx_builder);
const INST_VREDAND_VS : VInstruction = VInstruction::new(0xfc00707f,0x4002057,insts::OP_VREDAND_VS,vv_builder);
const INST_VREDMAX_VS : VInstruction = VInstruction::new(0xfc00707f,0x1c002057,insts::OP_VREDMAX_VS,vv_builder);
const INST_VREDMAXU_VS : VInstruction = VInstruction::new(0xfc00707f,0x18002057,insts::OP_VREDMAXU_VS,vv_builder);
const INST_VREDMIN_VS : VInstruction = VInstruction::new(0xfc00707f,0x14002057,insts::OP_VREDMIN_VS,vv_builder);
const INST_VREDMINU_VS : VInstruction = VInstruction::new(0xfc00707f,0x10002057,insts::OP_VREDMINU_VS,vv_builder);
const INST_VREDOR_VS : VInstruction = VInstruction::new(0xfc00707f,0x8002057,insts::OP_VREDOR_VS,vv_builder);
const INST_VREDSUM_VS : VInstruction = VInstruction::new(0xfc00707f,0x2057,insts::OP_VREDSUM_VS,vv_builder);
const INST_VREDXOR_VS : VInstruction = VInstruction::new(0xfc00707f,0xc002057,insts::OP_VREDXOR_VS,vv_builder);
const INST_VREM_VV : VInstruction = VInstruction::new(0xfc00707f,0x8c002057,insts::OP_VREM_VV,vv_builder);
const INST_VREM_VX : VInstruction = VInstruction::new(0xfc00707f,0x8c006057,insts::OP_VREM_VX,vx_builder);
const INST_VREMU_VV : VInstruction = VInstruction::new(0xfc00707f,0x88002057,insts::OP_VREMU_VV,vv_builder);
const INST_VREMU_VX : VInstruction = VInstruction::new(0xfc00707f,0x88006057,insts::OP_VREMU_VX,vx_builder);
const INST_VRGATHER_VI : VInstruction = VInstruction::new(0xfc00707f,0x30003057,insts::OP_VRGATHER_VI,vi_builder);
const INST_VRGATHER_VV : VInstruction = VInstruction::new(0xfc00707f,0x30000057,insts::OP_VRGATHER_VV,vv_builder);
const INST_VRGATHER_VX : VInstruction = VInstruction::new(0xfc00707f,0x30004057,insts::OP_VRGATHER_VX,vx_builder);
const INST_VRGATHEREI16_VV : VInstruction = VInstruction::new(0xfc00707f,0x38000057,insts::OP_VRGATHEREI16_VV,vv_builder);
const INST_VRSUB_VI : VInstruction = VInstruction::new(0xfc00707f,0xc003057,insts::OP_VRSUB_VI,vi_builder);
const INST_VRSUB_VX : VInstruction = VInstruction::new(0xfc00707f,0xc004057,insts::OP_VRSUB_VX,vx_builder);
const INST_VS1R_V : VInstruction = VInstruction::new(0xfff0707f,0x2800027,insts::OP_VS1R_V,vx_builder);
const INST_VS2R_V : VInstruction = VInstruction::new(0xfff0707f,0x22800027,insts::OP_VS2R_V,vx_builder);
const INST_VS4R_V : VInstruction = VInstruction::new(0xfff0707f,0x62800027,insts::OP_VS4R_V,vx_builder);
const INST_VS8R_V : VInstruction = VInstruction::new(0xfff0707f,0xe2800027,insts::OP_VS8R_V,vx_builder);
const INST_VSADD_VI : VInstruction = VInstruction::new(0xfc00707f,0x84003057,insts::OP_VSADD_VI,vi_builder);
const INST_VSADD_VV : VInstruction = VInstruction::new(0xfc00707f,0x84000057,insts::OP_VSADD_VV,vv_builder);
const INST_VSADD_VX : VInstruction = VInstruction::new(0xfc00707f,0x84004057,insts::OP_VSADD_VX,vx_builder);
const INST_VSADDU_VI : VInstruction = VInstruction::new(0xfc00707f,0x80003057,insts::OP_VSADDU_VI,vi_builder);
const INST_VSADDU_VV : VInstruction = VInstruction::new(0xfc00707f,0x80000057,insts::OP_VSADDU_VV,vv_builder);
const INST_VSADDU_VX : VInstruction = VInstruction::new(0xfc00707f,0x80004057,insts::OP_VSADDU_VX,vx_builder);
const INST_VSBC_VVM : VInstruction = VInstruction::new(0xfe00707f,0x48000057,insts::OP_VSBC_VVM,vv_builder);
const INST_VSBC_VXM : VInstruction = VInstruction::new(0xfe00707f,0x48004057,insts::OP_VSBC_VXM,vx_builder);
const INST_VSE1024_V : VInstruction = VInstruction::new(0x1df0707f,0x10007027,insts::OP_VSE1024_V,vx_builder);
const INST_VSE128_V : VInstruction = VInstruction::new(0x1df0707f,0x10000027,insts::OP_VSE128_V,vx_builder);
const INST_VSE16_V : VInstruction = VInstruction::new(0x1df0707f,0x5027,insts::OP_VSE16_V,vx_builder);
const INST_VSE256_V : VInstruction = VInstruction::new(0x1df0707f,0x10005027,insts::OP_VSE256_V,vx_builder);
const INST_VSE32_V : VInstruction = VInstruction::new(0x1df0707f,0x6027,insts::OP_VSE32_V,vx_builder);
const INST_VSE512_V : VInstruction = VInstruction::new(0x1df0707f,0x10006027,insts::OP_VSE512_V,vx_builder);
const INST_VSE64_V : VInstruction = VInstruction::new(0x1df0707f,0x7027,insts::OP_VSE64_V,vx_builder);
const INST_VSE8_V : VInstruction = VInstruction::new(0x1df0707f,0x27,insts::OP_VSE8_V,vx_builder);
const INST_VSETIVLI : VInstruction = VInstruction::new(0xc000707f,0xc0007057,insts::OP_VSETIVLI,vsetivli_builder);
const INST_VSETVL : VInstruction = VInstruction::new(0xfe00707f,0x80007057,insts::OP_VSETVL,vsetvl_builder);
const INST_VSETVLI : VInstruction = VInstruction::new(0x8000707f,0x7057,insts::OP_VSETVLI,vsetvli_builder);
const INST_VSEXT_VF2 : VInstruction = VInstruction::new(0xfc0ff07f,0x4803a057,insts::OP_VSEXT_VF2,vv_builder);
const INST_VSEXT_VF4 : VInstruction = VInstruction::new(0xfc0ff07f,0x4802a057,insts::OP_VSEXT_VF4,vv_builder);
const INST_VSEXT_VF8 : VInstruction = VInstruction::new(0xfc0ff07f,0x4801a057,insts::OP_VSEXT_VF8,vv_builder);
const INST_VSLIDE1DOWN_VX : VInstruction = VInstruction::new(0xfc00707f,0x3c006057,insts::OP_VSLIDE1DOWN_VX,vx_builder);
const INST_VSLIDE1UP_VX : VInstruction = VInstruction::new(0xfc00707f,0x38006057,insts::OP_VSLIDE1UP_VX,vx_builder);
const INST_VSLIDEDOWN_VI : VInstruction = VInstruction::new(0xfc00707f,0x3c003057,insts::OP_VSLIDEDOWN_VI,vi_builder);
const INST_VSLIDEDOWN_VX : VInstruction = VInstruction::new(0xfc00707f,0x3c004057,insts::OP_VSLIDEDOWN_VX,vx_builder);
const INST_VSLIDEUP_VI : VInstruction = VInstruction::new(0xfc00707f,0x38003057,insts::OP_VSLIDEUP_VI,vi_builder);
const INST_VSLIDEUP_VX : VInstruction = VInstruction::new(0xfc00707f,0x38004057,insts::OP_VSLIDEUP_VX,vx_builder);
const INST_VSLL_VI : VInstruction = VInstruction::new(0xfc00707f,0x94003057,insts::OP_VSLL_VI,vi_builder);
const INST_VSLL_VV : VInstruction = VInstruction::new(0xfc00707f,0x94000057,insts::OP_VSLL_VV,vv_builder);
const INST_VSLL_VX : VInstruction = VInstruction::new(0xfc00707f,0x94004057,insts::OP_VSLL_VX,vx_builder);
const INST_VSM_V : VInstruction = VInstruction::new(0xfff0707f,0x2b00027,insts::OP_VSM_V,vx_builder);
const INST_VSMUL_VV : VInstruction = VInstruction::new(0xfc00707f,0x9c000057,insts::OP_VSMUL_VV,vv_builder);
const INST_VSMUL_VX : VInstruction = VInstruction::new(0xfc00707f,0x9c004057,insts::OP_VSMUL_VX,vx_builder);
const INST_VSOXEI1024_V : VInstruction = VInstruction::new(0x1c00707f,0x1c007027,insts::OP_VSOXEI1024_V,vx_builder);
const INST_VSOXEI128_V : VInstruction = VInstruction::new(0x1c00707f,0x1c000027,insts::OP_VSOXEI128_V,vx_builder);
const INST_VSOXEI16_V : VInstruction = VInstruction::new(0x1c00707f,0xc005027,insts::OP_VSOXEI16_V,vx_builder);
const INST_VSOXEI256_V : VInstruction = VInstruction::new(0x1c00707f,0x1c005027,insts::OP_VSOXEI256_V,vx_builder);
const INST_VSOXEI32_V : VInstruction = VInstruction::new(0x1c00707f,0xc006027,insts::OP_VSOXEI32_V,vx_builder);
const INST_VSOXEI512_V : VInstruction = VInstruction::new(0x1c00707f,0x1c006027,insts::OP_VSOXEI512_V,vx_builder);
const INST_VSOXEI64_V : VInstruction = VInstruction::new(0x1c00707f,0xc007027,insts::OP_VSOXEI64_V,vx_builder);
const INST_VSOXEI8_V : VInstruction = VInstruction::new(0x1c00707f,0xc000027,insts::OP_VSOXEI8_V,vx_builder);
const INST_VSRA_VI : VInstruction = VInstruction::new(0xfc00707f,0xa4003057,insts::OP_VSRA_VI,vi_builder);
const INST_VSRA_VV : VInstruction = VInstruction::new(0xfc00707f,0xa4000057,insts::OP_VSRA_VV,vv_builder);
const INST_VSRA_VX : VInstruction = VInstruction::new(0xfc00707f,0xa4004057,insts::OP_VSRA_VX,vx_builder);
const INST_VSRL_VI : VInstruction = VInstruction::new(0xfc00707f,0xa0003057,insts::OP_VSRL_VI,vi_builder);
const INST_VSRL_VV : VInstruction = VInstruction::new(0xfc00707f,0xa0000057,insts::OP_VSRL_VV,vv_builder);
const INST_VSRL_VX : VInstruction = VInstruction::new(0xfc00707f,0xa0004057,insts::OP_VSRL_VX,vx_builder);
const INST_VSSE1024_V : VInstruction = VInstruction::new(0x1c00707f,0x18007027,insts::OP_VSSE1024_V,vx_builder);
const INST_VSSE128_V : VInstruction = VInstruction::new(0x1c00707f,0x18000027,insts::OP_VSSE128_V,vx_builder);
const INST_VSSE16_V : VInstruction = VInstruction::new(0x1c00707f,0x8005027,insts::OP_VSSE16_V,vx_builder);
const INST_VSSE256_V : VInstruction = VInstruction::new(0x1c00707f,0x18005027,insts::OP_VSSE256_V,vx_builder);
const INST_VSSE32_V : VInstruction = VInstruction::new(0x1c00707f,0x8006027,insts::OP_VSSE32_V,vx_builder);
const INST_VSSE512_V : VInstruction = VInstruction::new(0x1c00707f,0x18006027,insts::OP_VSSE512_V,vx_builder);
const INST_VSSE64_V : VInstruction = VInstruction::new(0x1c00707f,0x8007027,insts::OP_VSSE64_V,vx_builder);
const INST_VSSE8_V : VInstruction = VInstruction::new(0x1c00707f,0x8000027,insts::OP_VSSE8_V,vx_builder);
const INST_VSSRA_VI : VInstruction = VInstruction::new(0xfc00707f,0xac003057,insts::OP_VSSRA_VI,vi_builder);
const INST_VSSRA_VV : VInstruction = VInstruction::new(0xfc00707f,0xac000057,insts::OP_VSSRA_VV,vv_builder);
const INST_VSSRA_VX : VInstruction = VInstruction::new(0xfc00707f,0xac004057,insts::OP_VSSRA_VX,vx_builder);
const INST_VSSRL_VI : VInstruction = VInstruction::new(0xfc00707f,0xa8003057,insts::OP_VSSRL_VI,vi_builder);
const INST_VSSRL_VV : VInstruction = VInstruction::new(0xfc00707f,0xa8000057,insts::OP_VSSRL_VV,vv_builder);
const INST_VSSRL_VX : VInstruction = VInstruction::new(0xfc00707f,0xa8004057,insts::OP_VSSRL_VX,vx_builder);
const INST_VSSUB_VV : VInstruction = VInstruction::new(0xfc00707f,0x8c000057,insts::OP_VSSUB_VV,vv_builder);
const INST_VSSUB_VX : VInstruction = VInstruction::new(0xfc00707f,0x8c004057,insts::OP_VSSUB_VX,vx_builder);
const INST_VSSUBU_VV : VInstruction = VInstruction::new(0xfc00707f,0x88000057,insts::OP_VSSUBU_VV,vv_builder);
const INST_VSSUBU_VX : VInstruction = VInstruction::new(0xfc00707f,0x88004057,insts::OP_VSSUBU_VX,vx_builder);
const INST_VSUB_VV : VInstruction = VInstruction::new(0xfc00707f,0x8000057,insts::OP_VSUB_VV,vv_builder);
const INST_VSUB_VX : VInstruction = VInstruction::new(0xfc00707f,0x8004057,insts::OP_VSUB_VX,vx_builder);
const INST_VSUXEI1024_V : VInstruction = VInstruction::new(0x1c00707f,0x14007027,insts::OP_VSUXEI1024_V,vx_builder);
const INST_VSUXEI128_V : VInstruction = VInstruction::new(0x1c00707f,0x14000027,insts::OP_VSUXEI128_V,vx_builder);
const INST_VSUXEI16_V : VInstruction = VInstruction::new(0x1c00707f,0x4005027,insts::OP_VSUXEI16_V,vx_builder);
const INST_VSUXEI256_V : VInstruction = VInstruction::new(0x1c00707f,0x14005027,insts::OP_VSUXEI256_V,vx_builder);
const INST_VSUXEI32_V : VInstruction = VInstruction::new(0x1c00707f,0x4006027,insts::OP_VSUXEI32_V,vx_builder);
const INST_VSUXEI512_V : VInstruction = VInstruction::new(0x1c00707f,0x14006027,insts::OP_VSUXEI512_V,vx_builder);
const INST_VSUXEI64_V : VInstruction = VInstruction::new(0x1c00707f,0x4007027,insts::OP_VSUXEI64_V,vx_builder);
const INST_VSUXEI8_V : VInstruction = VInstruction::new(0x1c00707f,0x4000027,insts::OP_VSUXEI8_V,vx_builder);
const INST_VWADD_VV : VInstruction = VInstruction::new(0xfc00707f,0xc4002057,insts::OP_VWADD_VV,vv_builder);
const INST_VWADD_VX : VInstruction = VInstruction::new(0xfc00707f,0xc4006057,insts::OP_VWADD_VX,vx_builder);
const INST_VWADD_WV : VInstruction = VInstruction::new(0xfc00707f,0xd4002057,insts::OP_VWADD_WV,vv_builder);
const INST_VWADD_WX : VInstruction = VInstruction::new(0xfc00707f,0xd4006057,insts::OP_VWADD_WX,vx_builder);
const INST_VWADDU_VV : VInstruction = VInstruction::new(0xfc00707f,0xc0002057,insts::OP_VWADDU_VV,vv_builder);
const INST_VWADDU_VX : VInstruction = VInstruction::new(0xfc00707f,0xc0006057,insts::OP_VWADDU_VX,vx_builder);
const INST_VWADDU_WV : VInstruction = VInstruction::new(0xfc00707f,0xd0002057,insts::OP_VWADDU_WV,vv_builder);
const INST_VWADDU_WX : VInstruction = VInstruction::new(0xfc00707f,0xd0006057,insts::OP_VWADDU_WX,vx_builder);
const INST_VWMACC_VV : VInstruction = VInstruction::new(0xfc00707f,0xf4002057,insts::OP_VWMACC_VV,vv_builder);
const INST_VWMACC_VX : VInstruction = VInstruction::new(0xfc00707f,0xf4006057,insts::OP_VWMACC_VX,vx_builder);
const INST_VWMACCSU_VV : VInstruction = VInstruction::new(0xfc00707f,0xfc002057,insts::OP_VWMACCSU_VV,vv_builder);
const INST_VWMACCSU_VX : VInstruction = VInstruction::new(0xfc00707f,0xfc006057,insts::OP_VWMACCSU_VX,vx_builder);
const INST_VWMACCU_VV : VInstruction = VInstruction::new(0xfc00707f,0xf0002057,insts::OP_VWMACCU_VV,vv_builder);
const INST_VWMACCU_VX : VInstruction = VInstruction::new(0xfc00707f,0xf0006057,insts::OP_VWMACCU_VX,vx_builder);
const INST_VWMACCUS_VX : VInstruction = VInstruction::new(0xfc00707f,0xf8006057,insts::OP_VWMACCUS_VX,vx_builder);
const INST_VWMUL_VV : VInstruction = VInstruction::new(0xfc00707f,0xec002057,insts::OP_VWMUL_VV,vv_builder);
const INST_VWMUL_VX : VInstruction = VInstruction::new(0xfc00707f,0xec006057,insts::OP_VWMUL_VX,vx_builder);
const INST_VWMULSU_VV : VInstruction = VInstruction::new(0xfc00707f,0xe8002057,insts::OP_VWMULSU_VV,vv_builder);
const INST_VWMULSU_VX : VInstruction = VInstruction::new(0xfc00707f,0xe8006057,insts::OP_VWMULSU_VX,vx_builder);
const INST_VWMULU_VV : VInstruction = VInstruction::new(0xfc00707f,0xe0002057,insts::OP_VWMULU_VV,vv_builder);
const INST_VWMULU_VX : VInstruction = VInstruction::new(0xfc00707f,0xe0006057,insts::OP_VWMULU_VX,vx_builder);
const INST_VWREDSUM_VS : VInstruction = VInstruction::new(0xfc00707f,0xc4000057,insts::OP_VWREDSUM_VS,vv_builder);
const INST_VWREDSUMU_VS : VInstruction = VInstruction::new(0xfc00707f,0xc0000057,insts::OP_VWREDSUMU_VS,vv_builder);
const INST_VWSUB_VV : VInstruction = VInstruction::new(0xfc00707f,0xcc002057,insts::OP_VWSUB_VV,vv_builder);
const INST_VWSUB_VX : VInstruction = VInstruction::new(0xfc00707f,0xcc006057,insts::OP_VWSUB_VX,vx_builder);
const INST_VWSUB_WV : VInstruction = VInstruction::new(0xfc00707f,0xdc002057,insts::OP_VWSUB_WV,vv_builder);
const INST_VWSUB_WX : VInstruction = VInstruction::new(0xfc00707f,0xdc006057,insts::OP_VWSUB_WX,vx_builder);
const INST_VWSUBU_VV : VInstruction = VInstruction::new(0xfc00707f,0xc8002057,insts::OP_VWSUBU_VV,vv_builder);
const INST_VWSUBU_VX : VInstruction = VInstruction::new(0xfc00707f,0xc8006057,insts::OP_VWSUBU_VX,vx_builder);
const INST_VWSUBU_WV : VInstruction = VInstruction::new(0xfc00707f,0xd8002057,insts::OP_VWSUBU_WV,vv_builder);
const INST_VWSUBU_WX : VInstruction = VInstruction::new(0xfc00707f,0xd8006057,insts::OP_VWSUBU_WX,vx_builder);
const INST_VXOR_VI : VInstruction = VInstruction::new(0xfc00707f,0x2c003057,insts::OP_VXOR_VI,vi_builder);
const INST_VXOR_VV : VInstruction = VInstruction::new(0xfc00707f,0x2c000057,insts::OP_VXOR_VV,vv_builder);
const INST_VXOR_VX : VInstruction = VInstruction::new(0xfc00707f,0x2c004057,insts::OP_VXOR_VX,vx_builder);
const INST_VZEXT_VF2 : VInstruction = VInstruction::new(0xfc0ff07f,0x48032057,insts::OP_VZEXT_VF2,vv_builder);
const INST_VZEXT_VF4 : VInstruction = VInstruction::new(0xfc0ff07f,0x48022057,insts::OP_VZEXT_VF4,vv_builder);
const INST_VZEXT_VF8 : VInstruction = VInstruction::new(0xfc0ff07f,0x48012057,insts::OP_VZEXT_VF8,vv_builder);
pub const INSTRUCTION_LIST : [VInstruction; 302] = [
INST_VAADD_VV,
INST_VAADD_VX,
INST_VAADDU_VV,
INST_VAADDU_VX,
INST_VADC_VIM,
INST_VADC_VVM,
INST_VADC_VXM,
INST_VADD_VI,
INST_VADD_VV,
INST_VADD_VX,
INST_VAND_VI,
INST_VAND_VV,
INST_VAND_VX,
INST_VASUB_VV,
INST_VASUB_VX,
INST_VASUBU_VV,
INST_VASUBU_VX,
INST_VCOMPRESS_VM,
INST_VCPOP_M,
INST_VDIV_VV,
INST_VDIV_VX,
INST_VDIVU_VV,
INST_VDIVU_VX,
INST_VFIRST_M,
INST_VID_V,
INST_VIOTA_M,
INST_VL1RE16_V,
INST_VL1RE32_V,
INST_VL1RE64_V,
INST_VL1RE8_V,
INST_VL2RE16_V,
INST_VL2RE32_V,
INST_VL2RE64_V,
INST_VL2RE8_V,
INST_VL4RE16_V,
INST_VL4RE32_V,
INST_VL4RE64_V,
INST_VL4RE8_V,
INST_VL8RE16_V,
INST_VL8RE32_V,
INST_VL8RE64_V,
INST_VL8RE8_V,
INST_VLE1024_V,
INST_VLE128_V,
INST_VLE16_V,
INST_VLE256_V,
INST_VLE32_V,
INST_VLE512_V,
INST_VLE64_V,
INST_VLE8_V,
INST_VLM_V,
INST_VLOXEI1024_V,
INST_VLOXEI128_V,
INST_VLOXEI16_V,
INST_VLOXEI256_V,
INST_VLOXEI32_V,
INST_VLOXEI512_V,
INST_VLOXEI64_V,
INST_VLOXEI8_V,
INST_VLSE1024_V,
INST_VLSE128_V,
INST_VLSE16_V,
INST_VLSE256_V,
INST_VLSE32_V,
INST_VLSE512_V,
INST_VLSE64_V,
INST_VLSE8_V,
INST_VLUXEI1024_V,
INST_VLUXEI128_V,
INST_VLUXEI16_V,
INST_VLUXEI256_V,
INST_VLUXEI32_V,
INST_VLUXEI512_V,
INST_VLUXEI64_V,
INST_VLUXEI8_V,
INST_VMACC_VV,
INST_VMACC_VX,
INST_VMADC_VI,
INST_VMADC_VIM,
INST_VMADC_VV,
INST_VMADC_VVM,
INST_VMADC_VX,
INST_VMADC_VXM,
INST_VMADD_VV,
INST_VMADD_VX,
INST_VMAND_MM,
INST_VMANDNOT_MM,
INST_VMAX_VV,
INST_VMAX_VX,
INST_VMAXU_VV,
INST_VMAXU_VX,
INST_VMERGE_VIM,
INST_VMERGE_VVM,
INST_VMERGE_VXM,
INST_VMIN_VV,
INST_VMIN_VX,
INST_VMINU_VV,
INST_VMINU_VX,
INST_VMNAND_MM,
INST_VMNOR_MM,
INST_VMOR_MM,
INST_VMORNOT_MM,
INST_VMSBC_VV,
INST_VMSBC_VVM,
INST_VMSBC_VX,
INST_VMSBC_VXM,
INST_VMSBF_M,
INST_VMSEQ_VI,
INST_VMSEQ_VV,
INST_VMSEQ_VX,
INST_VMSGT_VI,
INST_VMSGT_VX,
INST_VMSGTU_VI,
INST_VMSGTU_VX,
INST_VMSIF_M,
INST_VMSLE_VI,
INST_VMSLE_VV,
INST_VMSLE_VX,
INST_VMSLEU_VI,
INST_VMSLEU_VV,
INST_VMSLEU_VX,
INST_VMSLT_VV,
INST_VMSLT_VX,
INST_VMSLTU_VV,
INST_VMSLTU_VX,
INST_VMSNE_VI,
INST_VMSNE_VV,
INST_VMSNE_VX,
INST_VMSOF_M,
INST_VMUL_VV,
INST_VMUL_VX,
INST_VMULH_VV,
INST_VMULH_VX,
INST_VMULHSU_VV,
INST_VMULHSU_VX,
INST_VMULHU_VV,
INST_VMULHU_VX,
INST_VMV1R_V,
INST_VMV2R_V,
INST_VMV4R_V,
INST_VMV8R_V,
INST_VMV_S_X,
INST_VMV_V_I,
INST_VMV_V_V,
INST_VMV_V_X,
INST_VMV_X_S,
INST_VMXNOR_MM,
INST_VMXOR_MM,
INST_VNCLIP_WI,
INST_VNCLIP_WV,
INST_VNCLIP_WX,
INST_VNCLIPU_WI,
INST_VNCLIPU_WV,
INST_VNCLIPU_WX,
INST_VNMSAC_VV,
INST_VNMSAC_VX,
INST_VNMSUB_VV,
INST_VNMSUB_VX,
INST_VNSRA_WI,
INST_VNSRA_WV,
INST_VNSRA_WX,
INST_VNSRL_WI,
INST_VNSRL_WV,
INST_VNSRL_WX,
INST_VOR_VI,
INST_VOR_VV,
INST_VOR_VX,
INST_VREDAND_VS,
INST_VREDMAX_VS,
INST_VREDMAXU_VS,
INST_VREDMIN_VS,
INST_VREDMINU_VS,
INST_VREDOR_VS,
INST_VREDSUM_VS,
INST_VREDXOR_VS,
INST_VREM_VV,
INST_VREM_VX,
INST_VREMU_VV,
INST_VREMU_VX,
INST_VRGATHER_VI,
INST_VRGATHER_VV,
INST_VRGATHER_VX,
INST_VRGATHEREI16_VV,
INST_VRSUB_VI,
INST_VRSUB_VX,
INST_VS1R_V,
INST_VS2R_V,
INST_VS4R_V,
INST_VS8R_V,
INST_VSADD_VI,
INST_VSADD_VV,
INST_VSADD_VX,
INST_VSADDU_VI,
INST_VSADDU_VV,
INST_VSADDU_VX,
INST_VSBC_VVM,
INST_VSBC_VXM,
INST_VSE1024_V,
INST_VSE128_V,
INST_VSE16_V,
INST_VSE256_V,
INST_VSE32_V,
INST_VSE512_V,
INST_VSE64_V,
INST_VSE8_V,
INST_VSETIVLI,
INST_VSETVL,
INST_VSETVLI,
INST_VSEXT_VF2,
INST_VSEXT_VF4,
INST_VSEXT_VF8,
INST_VSLIDE1DOWN_VX,
INST_VSLIDE1UP_VX,
INST_VSLIDEDOWN_VI,
INST_VSLIDEDOWN_VX,
INST_VSLIDEUP_VI,
INST_VSLIDEUP_VX,
INST_VSLL_VI,
INST_VSLL_VV,
INST_VSLL_VX,
INST_VSM_V,
INST_VSMUL_VV,
INST_VSMUL_VX,
INST_VSOXEI1024_V,
INST_VSOXEI128_V,
INST_VSOXEI16_V,
INST_VSOXEI256_V,
INST_VSOXEI32_V,
INST_VSOXEI512_V,
INST_VSOXEI64_V,
INST_VSOXEI8_V,
INST_VSRA_VI,
INST_VSRA_VV,
INST_VSRA_VX,
INST_VSRL_VI,
INST_VSRL_VV,
INST_VSRL_VX,
INST_VSSE1024_V,
INST_VSSE128_V,
INST_VSSE16_V,
INST_VSSE256_V,
INST_VSSE32_V,
INST_VSSE512_V,
INST_VSSE64_V,
INST_VSSE8_V,
INST_VSSRA_VI,
INST_VSSRA_VV,
INST_VSSRA_VX,
INST_VSSRL_VI,
INST_VSSRL_VV,
INST_VSSRL_VX,
INST_VSSUB_VV,
INST_VSSUB_VX,
INST_VSSUBU_VV,
INST_VSSUBU_VX,
INST_VSUB_VV,
INST_VSUB_VX,
INST_VSUXEI1024_V,
INST_VSUXEI128_V,
INST_VSUXEI16_V,
INST_VSUXEI256_V,
INST_VSUXEI32_V,
INST_VSUXEI512_V,
INST_VSUXEI64_V,
INST_VSUXEI8_V,
INST_VWADD_VV,
INST_VWADD_VX,
INST_VWADD_WV,
INST_VWADD_WX,
INST_VWADDU_VV,
INST_VWADDU_VX,
INST_VWADDU_WV,
INST_VWADDU_WX,
INST_VWMACC_VV,
INST_VWMACC_VX,
INST_VWMACCSU_VV,
INST_VWMACCSU_VX,
INST_VWMACCU_VV,
INST_VWMACCU_VX,
INST_VWMACCUS_VX,
INST_VWMUL_VV,
INST_VWMUL_VX,
INST_VWMULSU_VV,
INST_VWMULSU_VX,
INST_VWMULU_VV,
INST_VWMULU_VX,
INST_VWREDSUM_VS,
INST_VWREDSUMU_VS,
INST_VWSUB_VV,
INST_VWSUB_VX,
INST_VWSUB_WV,
INST_VWSUB_WX,
INST_VWSUBU_VV,
INST_VWSUBU_VX,
INST_VWSUBU_WV,
INST_VWSUBU_WX,
INST_VXOR_VI,
INST_VXOR_VV,
INST_VXOR_VX,
INST_VZEXT_VF2,
INST_VZEXT_VF4,
INST_VZEXT_VF8,
];
const MASKS : [u32; 10] =[
0xfc00707f,
0x1c00707f,
0xfff0707f,
0xfe00707f,
0x1df0707f,
0xfc0ff07f,
0xfe0ff07f,
0xfdfff07f,
0xc000707f,
0x8000707f,
];


#[cfg(test)]
mod tests {
use super::*;
const K_RVV : [u32;302] = [0x24002057,
0x24006057,
0x20002057,
0x20006057,
0x40003057,
0x40000057,
0x40004057,
0x3057,
0x57,
0x4057,
0x24003057,
0x24000057,
0x24004057,
0x2c002057,
0x2c006057,
0x28002057,
0x28006057,
0x5e002057,
0x40082057,
0x84002057,
0x84006057,
0x80002057,
0x80006057,
0x4008a057,
0x5008a057,
0x50082057,
0x2805007,
0x2806007,
0x2807007,
0x2800007,
0x22805007,
0x22806007,
0x22807007,
0x22800007,
0x62805007,
0x62806007,
0x62807007,
0x62800007,
0xe2805007,
0xe2806007,
0xe2807007,
0xe2800007,
0x10007007,
0x10000007,
0x5007,
0x10005007,
0x6007,
0x10006007,
0x7007,
0x7,
0x2b00007,
0x1c007007,
0x1c000007,
0xc005007,
0x1c005007,
0xc006007,
0x1c006007,
0xc007007,
0xc000007,
0x18007007,
0x18000007,
0x8005007,
0x18005007,
0x8006007,
0x18006007,
0x8007007,
0x8000007,
0x14007007,
0x14000007,
0x4005007,
0x14005007,
0x4006007,
0x14006007,
0x4007007,
0x4000007,
0xb4002057,
0xb4006057,
0x46003057,
0x44003057,
0x46000057,
0x44000057,
0x46004057,
0x44004057,
0xa4002057,
0xa4006057,
0x64002057,
0x60002057,
0x1c000057,
0x1c004057,
0x18000057,
0x18004057,
0x5c003057,
0x5c000057,
0x5c004057,
0x14000057,
0x14004057,
0x10000057,
0x10004057,
0x74002057,
0x78002057,
0x68002057,
0x70002057,
0x4e000057,
0x4c000057,
0x4e004057,
0x4c004057,
0x5000a057,
0x60003057,
0x60000057,
0x60004057,
0x7c003057,
0x7c004057,
0x78003057,
0x78004057,
0x5001a057,
0x74003057,
0x74000057,
0x74004057,
0x70003057,
0x70000057,
0x70004057,
0x6c000057,
0x6c004057,
0x68000057,
0x68004057,
0x64003057,
0x64000057,
0x64004057,
0x50012057,
0x94002057,
0x94006057,
0x9c002057,
0x9c006057,
0x98002057,
0x98006057,
0x90002057,
0x90006057,
0x9e003057,
0x9e00b057,
0x9e01b057,
0x9e03b057,
0x42006057,
0x5e003057,
0x5e000057,
0x5e004057,
0x42002057,
0x7c002057,
0x6c002057,
0xbc003057,
0xbc000057,
0xbc004057,
0xb8003057,
0xb8000057,
0xb8004057,
0xbc002057,
0xbc006057,
0xac002057,
0xac006057,
0xb4003057,
0xb4000057,
0xb4004057,
0xb0003057,
0xb0000057,
0xb0004057,
0x28003057,
0x28000057,
0x28004057,
0x4002057,
0x1c002057,
0x18002057,
0x14002057,
0x10002057,
0x8002057,
0x2057,
0xc002057,
0x8c002057,
0x8c006057,
0x88002057,
0x88006057,
0x30003057,
0x30000057,
0x30004057,
0x38000057,
0xc003057,
0xc004057,
0x2800027,
0x22800027,
0x62800027,
0xe2800027,
0x84003057,
0x84000057,
0x84004057,
0x80003057,
0x80000057,
0x80004057,
0x48000057,
0x48004057,
0x10007027,
0x10000027,
0x5027,
0x10005027,
0x6027,
0x10006027,
0x7027,
0x27,
0xc0007057,
0x80007057,
0x7057,
0x4803a057,
0x4802a057,
0x4801a057,
0x3c006057,
0x38006057,
0x3c003057,
0x3c004057,
0x38003057,
0x38004057,
0x94003057,
0x94000057,
0x94004057,
0x2b00027,
0x9c000057,
0x9c004057,
0x1c007027,
0x1c000027,
0xc005027,
0x1c005027,
0xc006027,
0x1c006027,
0xc007027,
0xc000027,
0xa4003057,
0xa4000057,
0xa4004057,
0xa0003057,
0xa0000057,
0xa0004057,
0x18007027,
0x18000027,
0x8005027,
0x18005027,
0x8006027,
0x18006027,
0x8007027,
0x8000027,
0xac003057,
0xac000057,
0xac004057,
0xa8003057,
0xa8000057,
0xa8004057,
0x8c000057,
0x8c004057,
0x88000057,
0x88004057,
0x8000057,
0x8004057,
0x14007027,
0x14000027,
0x4005027,
0x14005027,
0x4006027,
0x14006027,
0x4007027,
0x4000027,
0xc4002057,
0xc4006057,
0xd4002057,
0xd4006057,
0xc0002057,
0xc0006057,
0xd0002057,
0xd0006057,
0xf4002057,
0xf4006057,
0xfc002057,
0xfc006057,
0xf0002057,
0xf0006057,
0xf8006057,
0xec002057,
0xec006057,
0xe8002057,
0xe8006057,
0xe0002057,
0xe0006057,
0xc4000057,
0xc0000057,
0xcc002057,
0xcc006057,
0xdc002057,
0xdc006057,
0xc8002057,
0xc8006057,
0xd8002057,
0xd8006057,
0x2c003057,
0x2c000057,
0x2c004057,
0x48032057,
0x48022057,
0x48012057,
];
#[test]
pub fn test_rvv() {
    for i in 0..302 {
        assert!(find_rvv(K_RVV[i]) == i)
    }
}
}
